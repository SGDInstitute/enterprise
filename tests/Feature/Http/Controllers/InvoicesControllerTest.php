<?php

namespace Tests\Feature\Http\Controllers;

use App\Event;
use App\Invoice;
use App\Ticket;
use App\TicketType;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\InvoicesController
 */
class InvoicesControllerTest extends TestCase
{
    use RefreshDatabase;

    /** @test */
    public function can_view_invoice()
    {
        $event = factory(Event::class)->states('published')->create([
            'stripe' => 'institute',
        ]);
        $ticketType1 = $event->ticket_types()->save(factory(TicketType::class)->make());
        $user = factory(User::class)->create();
        $order = $event->orderTickets($user, [
            ['ticket_type_id' => $ticketType1->id, 'quantity' => 2],
        ]);
        $invoice = $order->invoice()->save(factory(Invoice::class)->make());

        $response = $this->withoutExceptionHandling()
            ->actingAs($user)
            ->get("/invoices/{$invoice->id}");

        $response->assertStatus(200)
            ->assertSee('Invoice');
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $invoice = factory(Invoice::class)->create();
        $user = factory(User::class)->create();

        $response = $this->actingAs($user)->patch('invoices/{invoice}', [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
